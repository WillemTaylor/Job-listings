{"remainingRequest":"/home/willemtaylor/Documents/job-listings/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/willemtaylor/Documents/job-listings/src/App.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/willemtaylor/Documents/job-listings/src/App.vue","mtime":1587479858927},{"path":"/home/willemtaylor/Documents/job-listings/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/willemtaylor/Documents/job-listings/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/willemtaylor/Documents/job-listings/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/willemtaylor/Documents/job-listings/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/willemtaylor/Documents/job-listings/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/willemtaylor/Documents/job-listings/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuL1NDU1MtdmFyaWFibGVzL3N0eWxlcy5zY3NzIjsK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <Header />\n    <div v-if=\"filter\" class=\"tile keywords\">\n      <div class=\"filters\">\n        <div v-if=\"!removeClicked && values.role\">\n          <h4>{{ values.role }}</h4>\n          <div id=\"role\" @click=\"handleRemoveFilter\">&#10006;</div>\n        </div>\n        <div v-if=\"!removeClicked && values.level\">\n          <h4>{{ values.level }}</h4>\n          <div id=\"level\" @click=\"handleRemoveFilter\">&#10006;</div>\n        </div>\n        <div v-if=\"!removeClicked && values.language\">\n          <h4>{{ values.language }}</h4>\n          <div id=\"language\" @click=\"handleRemoveFilter\">&#10006;</div>\n        </div>\n        <div v-if=\"!removeClicked && values.tool\">\n          <h4>{{ values.tool }}</h4>\n          <div id=\"tool\" @click=\"handleRemoveFilter\">&#10006;</div>\n        </div>\n      </div>\n      <h5 @click=\"removeFilterDashboard\">Clear</h5>\n    </div>\n    <div class=\"tile\" v-for=\"tile in handleShowTiles\" :key=\"tile.data\">\n      <div class=\"info-container\">\n        <div>\n          <img :src=\"require(`${tile.logo}`)\" />\n        </div>\n        <div>\n          <h4>{{ tile.company }}</h4>\n          <div v-if=\"tile.new\" class=\"new-tag\">\n            <p>NEW!</p>\n          </div>\n          <div v-if=\"tile.featured\" class=\"featured-tag\">\n            <p>FEATURED</p>\n          </div>\n          <h3>{{ tile.position }}</h3>\n          <p>\n            {{ tile.postedAt }} &bull; {{ tile.contract }} &bull;\n            {{ tile.location }}\n          </p>\n          <hr class=\"desktop-hide\" />\n        </div>\n      </div>\n      <div class=\"filters\">\n        <div>\n          <h4 id=\"role\" @click=\"handleClickFilter\">{{ tile.role }}</h4>\n        </div>\n        <div>\n          <h4 id=\"level\" @click=\"handleClickFilter\">{{ tile.level }}</h4>\n        </div>\n        <div v-for=\"lang in tile.languages\" :key=\"lang.languages\">\n          <h4 id=\"language\" @click=\"handleClickFilter\">{{ lang }}</h4>\n        </div>\n        <div v-for=\"tool in tile.tools\" :key=\"tool.tools\">\n          <h4 id=\"tool\" @click=\"handleClickFilter\">{{ tool }}</h4>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./components/header.vue\";\nimport json from \"../data.json\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Header\n  },\n  data() {\n    return {\n      data: json,\n      filter: false,\n      removeClicked: false,\n      values: {\n        role: \"\",\n        level: \"\",\n        language: \"\",\n        tool: \"\"\n      }\n    };\n  },\n  computed: {\n    handleShowTiles() {\n      let role = this.values.role;\n      let level = this.values.level;\n      let language = this.values.language;\n      let tool = this.values.tool;\n\n      if (role || level || language || tool) {\n        return this.data\n          .filter(arr => (role.length > 0 ? arr.role === role : arr))\n          .filter(arr => (level.length > 0 ? arr.level === level : arr))\n          .filter(arr => (language ? typeof arr.languages === \"object\" : arr))\n          .filter(arr =>\n            language.length > 0\n              ? arr.languages.some(x => x.includes(language))\n              : arr\n          )\n          .filter(arr => (tool ? typeof arr.tools === \"object\" : arr))\n          .filter(arr =>\n            tool.length > 0 ? arr.tools.some(x => x.includes(tool)) : arr\n          );\n      } else return this.removeFilterDashboard();\n    }\n  },\n  methods: {\n    removeFilterDashboard() {\n      this.values = {};\n      this.filter = false;\n      return this.data;\n    },\n    handleRemoveFilter() {\n      let id = event.target.id;\n\n      id === \"role\"\n        ? (this.values.role = \"\")\n        : id === \"level\"\n        ? (this.values.level = \"\")\n        : id === \"language\"\n        ? (this.values.language = \"\")\n        : id === \"tool\"\n        ? (this.values.tool = \"\")\n        : \"\";\n      this.handleShowTiles;\n    },\n    handleClickFilter() {\n      let result = event.target.innerHTML;\n      let id = event.target.id;\n\n      id === \"role\"\n        ? (this.values.role = result)\n        : id === \"level\"\n        ? (this.values.level = result)\n        : id === \"language\"\n        ? (this.values.language = result)\n        : id === \"tool\"\n        ? (this.values.tool = result)\n        : \"\";\n      this.removeClicked = false;\n      this.filter = true;\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"./SCSS-variables/styles.scss\";\n</style>\n"]}]}